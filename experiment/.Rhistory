6*jack^2
(6*jack^2)^(3/2)
jack
6*jack^2
jack^2
6*.26
(jack^3) / ((6*jack^2)^(3/2))
a_array = NULL
a_array[i] = (jack^3) / ((6*jack^2)^(3/2))
a_array
for(i in 1:1000){
jack = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
a_array[i] = (jack^3) / ((6*jack^2)^(3/2))
}
a_array
a_array
jack
i = 1
jack = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
jack
a_array[i] = (jack^3) / ((6*jack^2)^(3/2))
a_array
a_array[1]
(jack^3) / ((6*jack^2)^(3/2))
BOOT_TOOTH$mean
mean(BOOT_TOOTH$mean[-i])
BOOT_TOOTH$mean[i]
jack = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
jack
(jack^3) / ((6*jack^2)^(3/2))
i = 30
jack = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
jack
(jack^3) / ((6*jack^2)^(3/2))
jack
jack^3
6*jack^2
jack = NULL
jack_sq = NULL
jack_sq = NULL
jack_sq[i] = (jack^3) / (6*(jack)^(3/2))
jack_sq
jack[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
jack
jack[i]^3
jack_sq[i] = (jack[i]^3) / (6*(jack[i])^(3/2))
jack_sq
jack = NULL
jack_sq = NULL
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
for(i in 1:1000){
jack[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
jack_sq[i] = (jack[i]^3) / (6*(jack[i])^(3/2))
}
jack_3 = NULL
jack_3_2 = NULL
Theta_Hat = TOOTH[round(nrow(TOOTH)*.95), 3]
jack_3 = NULL
jack_3_2 = NULL
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
for(i in 1:1000){
jack_3[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
jack_3_2[i] = (jack_3[i]^3) / (6*(jack_3_2[i])^(3/2))
}
a_hat = jack
jack_3 = NULL
jack_3_2 = NULL
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
for(i in 1:1000){
jack_3[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
jack_3_2[i] = (jack_3[i]^3) / (6*(jack_3_2[i])^(3/2))
}
jack^2
c(1,2)^2
jack = NULL
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
for(i in 1:1000){
jack[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
}
jack
a_hat = sum(jack^3)/(6*sum(jack^2))^(3/2))
(6*sum(jack^2))
(6*sum(jack^2))^(3/2))
a_hat = sum(jack^3)/(6*sum(jack^2)^(3/2))
a_hat
sum(jack^2)
sum(jack^2)^(3/2)
sum(jack^3)
jack
jack[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
ack[i]
jack[i]
BOOT_TOOTH
jack
a_hat = sum(jack^3)/(6*sum(jack^2)^(3/2))
a_hat
alpha = dnorm(1.645)
alpha
alpha = qnorm(1.645)
alpha
qnorm(1.645)
pnorm(1.645)
alpha
alpha = .95
qnorm(alpha)
alpha_return = pnorm(z_hat_0 + (z_hat_0 + qnorm(alpha))/(1 - a_hat*(z_hat_0 + qnorm(alpha))))
alpha_return
z_hat_0
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
n = 10
B = 1000
BOOT_TOOTH = NULL
for(i in 1 : B){
sample = sample(TOOTH$D1_D2, n, replace = TRUE)
BOOT_TOOTH = rbind(BOOT_TOOTH, sample)
}
BOOT_TOOTH<-as.data.frame(BOOT_TOOTH)
BOOT_TOOTH$mean = apply(BOOT_TOOTH, 1, mean)
BOOT_TOOTH<-BOOT_TOOTH[order(BOOT_TOOTH$mean),]
Theta_Hat = TOOTH[round(nrow(TOOTH)*.95), 3]
jack = NULL
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
z_hat_0
BOOT_TOOTH$mean
Theta_Hat
BOOT_TOOTH$mean
BOOT_TOOTH$mean<Theta_Hat
Theta_Hat = TOOTH[round(nrow(TOOTH)*.95), 3]
Theta_Hat
TOOTH
n = 5
B = 1000
BOOT_TOOTH = NULL
for(i in 1 : B){
sample = sample(TOOTH$D1_D2, n, replace = TRUE)
BOOT_TOOTH = rbind(BOOT_TOOTH, sample)
}
BOOT_TOOTH<-as.data.frame(BOOT_TOOTH)
BOOT_TOOTH$mean = apply(BOOT_TOOTH, 1, mean)
BOOT_TOOTH
BOOT_TOOTH<-as.data.frame(BOOT_TOOTH)
BOOT_TOOTH$mean = apply(BOOT_TOOTH, 1, mean)
BOOT_TOOTH
n = 5
B = 1000
BOOT_TOOTH = NULL
for(i in 1 : B){
sample = sample(TOOTH$D1_D2, n, replace = TRUE)
BOOT_TOOTH = rbind(BOOT_TOOTH, sample)
}
BOOT_TOOTH
BOOT_TOOTH<-as.data.frame(BOOT_TOOTH)
BOOT_TOOTH
for(i in 1 : B){
sample = sample(TOOTH$D1_D2, n, replace = TRUE)
BOOT_TOOTH = rbind(BOOT_TOOTH, sample)
}
BOOT_TOOTH
class(BOOT_TOOTH)
BOOT_TOOTH$mean = apply(BOOT_TOOTH, 1, mean)
BOOT_TOOTH
View(BOOT_TOOTH)
BOOT_TOOTH<-BOOT_TOOTH[order(BOOT_TOOTH$mean),]
BOOT_TOOTH
Theta_Hat = TOOTH[round(nrow(TOOTH)*.95), 3]
jack = NULL
sum(BOOT_TOOTH$mean<Theta_Hat)
B
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
for(i in 1:1000){
jack[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
}
jack
a_hat = sum(jack^3)/(6*sum(jack^2)^(3/2))
a_hat
get_BCA<-function(BOOT_TOOTH, TOOTH, alpha){
n = 5
B = 1000
BOOT_TOOTH = NULL
for(i in 1 : B){
sample = sample(TOOTH$D1_D2, n, replace = TRUE)
BOOT_TOOTH = rbind(BOOT_TOOTH, sample)
}
BOOT_TOOTH$mean = apply(BOOT_TOOTH, 1, mean)
BOOT_TOOTH<-BOOT_TOOTH[order(BOOT_TOOTH$mean),]
Theta_Hat = TOOTH[round(nrow(TOOTH)*.95), 3]
jack = NULL
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
for(i in 1:1000){
jack[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
}
a_hat = sum(jack^3)/(6*sum(jack^2)^(3/2))
}
alpha_return = pnorm(z_hat_0 + (z_hat_0 + qnorm(alpha))/(1 - a_hat*(z_hat_0 + qnorm(alpha))))
alpha_return
get_BCA<-function(BOOT_TOOTH, TOOTH, alpha){
n = 5
B = 1000
BOOT_TOOTH = NULL
for(i in 1 : B){
sample = sample(TOOTH$D1_D2, n, replace = TRUE)
BOOT_TOOTH = rbind(BOOT_TOOTH, sample)
}
BOOT_TOOTH$mean = apply(BOOT_TOOTH, 1, mean)
BOOT_TOOTH<-BOOT_TOOTH[order(BOOT_TOOTH$mean),]
Theta_Hat = TOOTH[round(nrow(TOOTH)*.95), 3]
jack = NULL
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
for(i in 1:1000){
jack[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
}
a_hat = sum(jack^3)/(6*sum(jack^2)^(3/2))
alpha_return = pnorm(z_hat_0 + (z_hat_0 + qnorm(alpha))/(1 - a_hat*(z_hat_0 + qnorm(alpha))))
return(alpha_return)
}
alpha_1 = get_BCA(BOOT_TOOTH, TOOTH, .95)
n = 5
B = 1000
BOOT_TOOTH = NULL
for(i in 1 : B){
sample = sample(TOOTH$D1_D2, n, replace = TRUE)
BOOT_TOOTH = rbind(BOOT_TOOTH, sample)
}
BOOT_TOOTH$mean = apply(BOOT_TOOTH, 1, mean)
BOOT_TOOTH$mean
BOOT_TOOTH$mean = unlist(apply(BOOT_TOOTH, 1, mean))
BOOT_TOOTH = NULL
for(i in 1 : B){
sample = sample(TOOTH$D1_D2, n, replace = TRUE)
BOOT_TOOTH = rbind(BOOT_TOOTH, sample)
}
BOOT_TOOTH
unlist(apply(BOOT_TOOTH, 1, mean))
BOOT_TOOTH$mean = unlist(apply(BOOT_TOOTH, 1, mean))
BOOT_TOOTH$mean
BOOT_TOOTH<-BOOT_TOOTH[order(BOOT_TOOTH$mean),]
View(apply(BOOT_TOOTH, 1, mean))
BOOT_TOOTH
n = 5
B = 1000
BOOT_TOOTH = NULL
for(i in 1 : B){
sample = sample(TOOTH$D1_D2, n, replace = TRUE)
BOOT_TOOTH = rbind(BOOT_TOOTH, sample)
}
BOOT_TOOTH = as.data.frame(BOOT_TOOTH)
BOOT_TOOTH$mean = unlist(apply(BOOT_TOOTH, 1, mean))
BOOT_TOOTH<-BOOT_TOOTH[order(BOOT_TOOTH$mean),]
Theta_Hat = TOOTH[round(nrow(TOOTH)*.95), 3]
jack = NULL
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
for(i in 1:1000){
jack[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
}
a_hat = sum(jack^3)/(6*sum(jack^2)^(3/2))
alpha_return = pnorm(z_hat_0 + (z_hat_0 + qnorm(alpha))/(1 - a_hat*(z_hat_0 + qnorm(alpha))))
return(alpha_return)
get_BCA<-function(BOOT_TOOTH, TOOTH, alpha){
n = 5
B = 1000
BOOT_TOOTH = NULL
for(i in 1 : B){
sample = sample(TOOTH$D1_D2, n, replace = TRUE)
BOOT_TOOTH = rbind(BOOT_TOOTH, sample)
}
BOOT_TOOTH = as.data.frame(BOOT_TOOTH)
BOOT_TOOTH$mean = unlist(apply(BOOT_TOOTH, 1, mean))
BOOT_TOOTH<-BOOT_TOOTH[order(BOOT_TOOTH$mean),]
Theta_Hat = TOOTH[round(nrow(TOOTH)*.95), 3]
jack = NULL
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
for(i in 1:1000){
jack[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
}
a_hat = sum(jack^3)/(6*sum(jack^2)^(3/2))
alpha_return = pnorm(z_hat_0 + (z_hat_0 + qnorm(alpha))/(1 - a_hat*(z_hat_0 + qnorm(alpha))))
return(alpha_return)
}
alpha_1 = get_BCA(BOOT_TOOTH, TOOTH, .95)
alpha_1
alpha_1 = get_BCA(BOOT_TOOTH, TOOTH, .95)
alpha_1
alpha_1 = get_BCA(BOOT_TOOTH, TOOTH, .95)
alpha_1
alpha_1 = get_BCA(BOOT_TOOTH, TOOTH, .95)
alpha_1
alpha_1 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2
alpha_2 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2
get_BCA<-function(BOOT_TOOTH, TOOTH, alpha){
n = 5
B = 1000
BOOT_TOOTH = NULL
for(i in 1 : B){
sample = sample(TOOTH$D1_D2, n, replace = TRUE)
BOOT_TOOTH = rbind(BOOT_TOOTH, sample)
}
BOOT_TOOTH = as.data.frame(BOOT_TOOTH)
BOOT_TOOTH$mean = unlist(apply(BOOT_TOOTH, 1, mean))
BOOT_TOOTH<-BOOT_TOOTH[order(BOOT_TOOTH$mean),]
Theta_Hat = TOOTH[round(nrow(TOOTH)*.95), 3]
jack = NULL
z_hat_0 = qnorm(sum(BOOT_TOOTH$mean<Theta_Hat)/B)
for(i in 1:1000){
jack[i] = mean(BOOT_TOOTH$mean[-i]) - BOOT_TOOTH$mean[i]
}
a_hat = sum(jack^3)/(6*sum(jack^2)^(3/2))
alpha_return = pnorm(z_hat_0 + (z_hat_0 + qnorm(alpha))/(1 - a_hat*(z_hat_0 + qnorm(alpha))))
return(alpha_return)
}
alpha_1 = get_BCA(BOOT_TOOTH, TOOTH, .95)
alpha_2 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_1
alpha_1 = get_BCA(BOOT_TOOTH, TOOTH, .95)
alpha_1
alpha_2 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2
alpha_2 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2
alpha_2 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2
alpha_2 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2
alpha_2 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2
alpha_2 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2
alpha_2 = get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2
TOOTH
TOOTH<-TOOTH[order(TOOTH$D1_D2),]
names(TOOTH)<-c("D1", "D2", "D1_D2")
TOOTH
BOOT_TOOTH
pnorm(0.0005355728)
alpha_2 = 1-get_BCA(BOOT_TOOTH, TOOTH, .05)
alpha_2
get_BCA(BOOT_TOOTH, TOOTH, .05)
BOOT_TOOTH[round(0.0005355728),round(0.9983313)]
BOOT_TOOTH[round(0.0005355728),]
BOOT_TOOTH
BOOT_TOOTH$mean[round(0.0005355728),]
BOOT_TOOTH$mean[round(0.0005355728)]
round(0.0005355728)
BOOT_TOOTH$mean[ceiling(0.0005355728)*length(BOOT_TOOTH$mean)]
BOOT_TOOTH$mean[floor(0.9983313)*length(BOOT_TOOTH$mean)]
floor(0.9983313)*length(BOOT_TOOTH$mean)
BOOT_TOOTH$mean[ceiling(0.0005355728*length(BOOT_TOOTH$mean))]
BOOT_TOOTH$mean[floor(0.9983313*length(BOOT_TOOTH$mean))]
BOOT_TOOTH$mean[ceiling(0.0005355728*length(BOOT_TOOTH$mean))]
BOOT_TOOTH$mean[floor(0.9983313*length(BOOT_TOOTH$mean))]
lower = BOOT_TOOTH$mean[ceiling(0.0005355728*length(BOOT_TOOTH$mean))]
upper = BOOT_TOOTH$mean[floor(0.9983313*length(BOOT_TOOTH$mean))]
norm_df$diff
norm_df<-as.data.frame(norm_df)
norm_df
norm_df$diff - 129
norm_df<-as.data.frame(norm_df)
norm_df$z_bar <- apply(norm_df,1,mean)
norm_df$diff <- norm_df$z_bar - 129
norm_df$diff
sd(norm_df$z_bar)
for(i in 1:100){
norm_df = rbind(norm_df, rnorm(7,129,66.8))
}
norm_df$z_score <- norm_df$diff/(sd(norm_df$z_bar)/10)
norm_df = NULL
for(i in 1:100){
norm_df = rbind(norm_df, rnorm(7,129,66.8))
}
norm_df<-as.data.frame(norm_df)
norm_df$z_bar <- apply(norm_df,1,mean)
norm_df$diff <- norm_df$z_bar - 129
norm_df$ASL <- norm_df$diff/(sd(norm_df$z_bar)/10)
norm_df$ASL
sd(norm_df$z_bar)
sd(norm_df[i,])
sd(norm_df[i,]
)
norm_df$diff[i]/(sd(norm_df[i,])/10)
for(i in 1:100)
norm_df$ASL <- norm_df$diff[i]/(sd(norm_df[i,])/10)
norm_df$ASL
for(i in 1:100)
norm_df$ASL[i] <- norm_df$diff[i]/(sd(norm_df[i,])/10)
norm_df$ASL
mean(norm_df$ASL)
norm_df = NULL
for(i in 1:100){
norm_df = rbind(norm_df, rnorm(7,129,66.8))
}
norm_df<-as.data.frame(norm_df)
norm_df$z_bar <- apply(norm_df,1,mean)
norm_df$diff <- norm_df$z_bar - 129
for(i in 1:100)
norm_df$z_score[i] <- norm_df$diff[i]/(sd(norm_df[i,])/10)
mean(norm_df$z_score)
norm_df<- norm_df[order(norm_df$z_score),]
norm_df
i = 1
norm_df$z_score
norm_df$z_score[i] > norm_df$z_score
norm_df$z_score[i] >= norm_df$z_score
norm_df$ASL[i] <- sum(norm_df$z_score[i] >= norm_df$z_score)/100
for(i in 1:100)
norm_df$ASL[i] <- sum(norm_df$z_score[i] >= norm_df$z_score)/100
sum(norm_df$ASL)
mean(norm_df$z_bar)
mean(norm_df$z_bar)  - 129
diff = mean(norm_df$z_bar)  - 129
diff
diff + norm_df$z_bar
diff + norm_df$z_bar
norm_df$trans = diff + norm_df$z_bar
mean(norm_df$ASL)
norm_df$ASL_trans[i] <- sum(norm_df$z_score[i] >= norm_df$trans)/100
for(i in 1:100)
norm_df$ASL_trans[i] <- sum(norm_df$z_score[i] >= norm_df$trans)/100
mean(norm_df$ASL_trans)
norm_df$trans
norm_df$diff <- norm_df$trans - 129
norm_df
norm_df = NULL
for(i in 1:100){
norm_df = rbind(norm_df, rnorm(7,129,66.8))
}
norm_df<-as.data.frame(norm_df)
norm_df$z_bar <- apply(norm_df,1,mean)
norm_df$diff <- norm_df$z_bar - 129
for(i in 1:100)
norm_df$z_score[i] <- norm_df$diff[i]/(sd(norm_df[i,1:7])/10)
norm_df <- norm_df[order(norm_df$z_score),]
norm_df
hist(norm_df$z_score)
hist(norm_df$z_score)
norm_df$diff_trans <- norm_df$trans - 129
norm_df = NULL
for(i in 1:100){
norm_df = rbind(norm_df, rnorm(7,129,66.8))
}
norm_df<-as.data.frame(norm_df)
norm_df$z_bar <- apply(norm_df,1,mean)
norm_df$diff <- norm_df$z_bar - 129
for(i in 1:100)
norm_df$z_score[i] <- norm_df$diff[i]/(sd(norm_df[i,1:7])/10)
norm_df <- norm_df[order(norm_df$z_score),]
for(i in 1:100)
norm_df$ASL[i] <- sum(norm_df$z_score[i] >= norm_df$z_score)/100
mean(norm_df$ASL)
diff = mean(norm_df$z_bar)  - 129
norm_df$trans = diff + norm_df$z_bar
norm_df$diff_trans <- norm_df$trans - 129
norm_df$z_score_trans[i] <- norm_df$diff_trans[i]/(sd(norm_df[i,1:7])/10)
norm_df$ASL_trans[i] <- sum(norm_df$z_score[i] >= norm_df$z_score_trans)/100
for(i in 1:100)
norm_df$ASL_trans[i] <- sum(norm_df$z_score[i] >= norm_df$z_score_trans)/100
mean(norm_df$ASL_trans)
sum(norm_df$z_score[i] >= norm_df$z_score_trans)/100
sum(norm_df$z_score[i] >= norm_df$z_score_trans)
i
norm_df$z_score_trans
norm_df$diff_trans
norm_df$diff_trans <- norm_df$trans - 129
norm_df$diff_trans
sd(norm_df[i,1:7])
for(i in 1:100)
norm_df$z_score_trans[i] <- norm_df$diff_trans[i]/(sd(norm_df[i,1:7])/10)
norm_df$z_score_trans
norm_df$z_score
norm_df$z_score[i] >= norm_df$z_score_trans
i = 10
sum(norm_df$z_score[i] >= norm_df$z_score_trans)
i = 80
sum(norm_df$z_score[i] >= norm_df$z_score_trans)
norm_df$z_score_trans
norm_df$z_score
mean(norm_df$ASL_trans)
for(i in 1:100)
norm_df$ASL_trans[i] <- sum(norm_df$z_score[i] >= norm_df$z_score_trans)/100
mean(norm_df$ASL_trans)
norm_df = NULL
for(i in 1:100){
norm_df = rbind(norm_df, rnorm(7,170,66.8))
}
norm_df<-as.data.frame(norm_df)
norm_df$z_bar <- apply(norm_df,1,mean)
norm_df$diff <- norm_df$z_bar - 129
for(i in 1:100)
norm_df$z_score[i] <- norm_df$diff[i]/(sd(norm_df[i,1:7])/10)
norm_df <- norm_df[order(norm_df$z_score),]
for(i in 1:100)
norm_df$ASL[i] <- sum(norm_df$z_score[i] >= norm_df$z_score)/100
mean(norm_df$ASL)
diff = mean(norm_df$z_bar)  - 129
diff = mean(norm_df$z_bar)  - 129
norm_df$trans = diff + norm_df$z_bar
norm_df$diff_trans <- norm_df$trans - 129
for(i in 1:100)
norm_df$z_score_trans[i] <- norm_df$diff_trans[i]/(sd(norm_df[i,1:7])/10)
for(i in 1:100)
norm_df$ASL_trans[i] <- sum(norm_df$z_score[i] >= norm_df$z_score_trans)/100
mean(norm_df$ASL_trans)
iris_data = read.csv("iris.data.txt", header = FALSE)
setwd("~/Documents/ML/Reinforcement-Learning-Study/experiment")
iris_data = read.csv("iris.data.txt", header = FALSE)
iris_data
length(unique(iris_data))
length(unique(iris_data[1]))
length(unique(iris_data[[1]]))
